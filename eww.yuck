;; Display basic system info

(defpoll time :interval "5s"
  `date +'{"hour":"%H","min":"%M","second":"%S"}'`)

;; 󰂎 󰁺 󰁻 󰁼 󰁽 󰁾 󰁿 󰂀 󰂁 󰂂 󰁹 
;; 󱊡 󱊢 󱊣 
;; 󰢟 󰢜 󰂆 󰂇 󰂈 󰢝 󰂉 󰢞 󰂊 󰂋 󰂅 
;; 󱊤 󱊥 󱊦 

;; 󰤾 󰤿 󰥀 󰥁 󰥂 󰥃 󰥄 󰥅 󰥆 󰥇 󰥉
;; 󱃌 󱟞 󱟠 
;; 󰂃 
;; 󰥈 󰂄 󱟢 󱧥 󱈏 󱞜 󱟤 󰂍 󱟦 󰂐 󱉝 

;; 󱟢

(defwidget battery_icon [status capacity]
  (label :text "${{
    "Discharging": ["󰂎", "󰁺", "󰁻", "󰁼", "󰁽", "󰁾", "󰁿", "󰂀", "󰂁", "󰂂", "󰁹"],
    "Charging": ["󰢟", "󰢜", "󰂆", "󰂇", "󰂈", "󰢝", "󰂉", "󰢞", "󰂊", "󰂋", "󰂅"],
    "Full": ["󰢟", "󰢜", "󰂆", "󰂇", "󰂈", "󰢝", "󰂉", "󰢞", "󰂊", "󰂋", "󰂄"],
    "Not charging": ["󰂎", "󰁺", "󰁻", "󰁼", "󰁽", "󰁾", "󰁿", "󰂀", "󰂁", "󰂂", "󱟢"]
  }[status][round(capacity / 10, 0)]}"))

(defwidget battery_indicator []
  (overlay
    :tooltip "${EWW_BATTERY['BAT0'].status} ${EWW_BATTERY['BAT0'].capacity}%"
    (circular-progress
      :thickness {EWW_BATTERY['BAT0'].status == "Charging" ? 2 : EWW_BATTERY['BAT0'].capacity / 50}
      :value "${EWW_BATTERY['BAT0'].capacity}")
    (battery_icon :status "${EWW_BATTERY['BAT0'].status}"
                  :capacity "${EWW_BATTERY['BAT0'].capacity}")
  ))

(defwidget cpu_indicator []
  (overlay
    (graph
      :value "${EWW_CPU.avg}"
      :time-range "60000ms"
      :tooltip "${round(EWW_CPU.avg, 2)}%")
    (label :text "${round(EWW_CPU.avg, 0)}%")))

(defwidget clock_indicator []
  (label :text "${time.hour}:${time.min}" :tooltip "The time right now"))

(deflisten volume
  :initial `bash ~/.config/eww/scripts/volume.sh`
  `bash ~/.config/eww/scripts/volume.sh --watch`)

;; nf-fa-volume_down,f027,
;; nf-fa-volume_off,f026,
;; nf-fa-volume_up,f028,
;; nf-md-volume_high,f057e,󰕾
;; nf-md-volume_low,f057f,󰕿
;; nf-md-volume_medium,f0580,󰖀
;; nf-md-volume_off,f0581,󰖁
;; nf-md-volume_variant_off,f0e08,󰸈

(defwidget volume_indicator []
  (overlay
    :tooltip "${EWW_BATTERY['BAT0'].status} ${EWW_BATTERY['BAT0'].capacity}%"
    (circular-progress
      :thickness {EWW_BATTERY['BAT0'].status == "Charging" ? 2 : EWW_BATTERY['BAT0'].capacity / 50}
      :value "${EWW_BATTERY['BAT0'].capacity}")
    (battery_icon :status "${EWW_BATTERY['BAT0'].status}"
                  :capacity "${EWW_BATTERY['BAT0'].capacity}")
  ))

(defwidget systeminfo_layout []
  (box :orientation "v" :class "bx"
    (cpu_indicator)
    (battery_indicator)
    (clock_indicator)
  ))

(defwindow systeminfo
  :monitor 0
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry
              :anchor "center right"
              ;; :x "3px"
              :width "5%"
              :height "22%")
  (systeminfo_layout))

(deflisten brightness :initial "42" "/sys/class/backlight/intel_backlight/actual_brightness")

(defwindow brightnessinfo
  :monitor 0
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry
              :anchor "center"
              ;; :x "3px"
              :width "10%"
              :height "4%")
  (label :text brightness))

;; Old stuff that I may use later

;; (deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces.sh")
;; (deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace.sh")
;; (defwidget workspaces [screen]
;;   (eventbox
;;     :onscroll "bash ~/.config/eww/scripts/change-active-workspace.sh {} ${current_workspace}"
;;     :class "workspaces-widget"
;;       (box :space-evenly true
;;         (label :text "${workspaces}${current_workspace}" :visible false)
;;         (for workspace in workspaces
;;           (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
;;             (box :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
;;               (label :text "${workspace.id}")))))))
;;
;; (deflisten window :initial "..." "sh ~/.config/eww/scripts/get-window-title.sh")
;; (defwidget window_w [screen]
;;   (box
;;     (label :text "${window}")))

